В Python все является объектом. Переменной может присвоен любой объект

СПИСОК [,] - упорядоченная изменяемая коллекция объектов.
Элементы списка индекированы и нумеруются, начиная с нуля.
D один и тот же список можно добавлять объекты различных типов (гетерогенность).

КОРТЕЖ - неизменямый список (константный список).

СЛОВАРЬ {:,} - неупорядоченное множество пар ключ/значение (хеш-таблица).
Значением, ассоциированным с ключом, может быть любой объект.
Словари являются неупорядоченными и изменяемыми.

МНОЖЕСТВО {,} Set() - неупорядоченный набор неповторяющихся объектов.
М. могут изменяться динамически.
М. поддерживают операции пересечения, объединения и дополнения.


Шаблон декоратора функции func().
from functools import wraps

def decorator(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        # 1. Код, выполняющийся ДО вызова декорируемой функции
        if можно выполнять func:
            # 2. Вызов декорируемой функции и возврат результата выполнения
            return func(*args, **kwargs)
        # 3. Код, выполняющийся ВМЕСТО декорируемой функции
    return wrapper


Генераторы.

Краткая запись цикла for
Выполняются быстрее
Могут встравиться в другие конструкции языка (циклы, функции)

[newList_item for old_item in old_items if condition == True] - генератор списка
(newList_item for old_item in old_items if condition == True) - выражение-генератор (пошаговое выполнение + yield)
{newSet_item for old_item in old_items if condition == True} - генератор множеств
{newDict_key : newDict_value for old_item in old_items if condition == True} - генератор словарей